openapi: 3.0.0
info:
  title: Payment Gateway API
  version: v1

servers:
  - url: https://superhost.ru/
    description: Production

  - url: http://localhost:8081/
    description: Develop

paths:
  /v1/example/:year/:user:
    get:
      operationId: Example

      parameters:
        - name: year
          in: path
          schema:
            type: integer
            format: int64

        - name: user
          in: path
          schema:
            type: object
            properties:
              role:
                type: string
              firstName:
                type: string

        - name: sum
          in: query
          schema:
            type: integer
            format: decimal

        - name: fromDate
          in: query
          schema:
            type: string
            format: 'date'

        - name: from
          in: query
          schema:
            type: string
            format: 'date-time'

        - name: to
          in: query
          schema:
            type: string
            format: 'unix-time'

      responses:
        '200':
          description: OK

  /v1/payment:
    get:
      operationId: GetPayment

      parameters:
        - name: id
          description: 'Payment ID'
          in: query
          schema:
            type: string

        - name: async
          in: query
          schema:
            type: string
            enum:
              - true
              - false

      responses:
        '200':
          description: OK

    post:
      summary: 'Provide user payment'
      operationId: ProvidePayment

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'

      responses:
        '200':
          description: OK

  /v1/user/:userId:
    get:
      summary: 'Get user data'
      operationId: GetUser

      parameters:
        - name: userId
          in: path
          schema:
            type: string

      responses:
        '200':
          description: OK

  /v1/user:
    post:
      summary: 'Create user'
      operationId: CreateUser

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                age:
                  type: integer
                avatar:
                  type: string
                  format: binary

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    $ref: '#/components/schemas/ID'

  /v1/files/:filename:
    get:
      summary: 'Get file by name'
      operationId: GetFile

      parameters:
        - name: filename
          in: path
          schema:
            type: string

      responses:
        '200':
          description: OK

components:
  schemas:
    Payment:
      type: object
      properties:
        payment_id:
          $ref: '#/components/schemas/ID'

        merchant_id:
          type: string

        sum:
          type: number
          format: decimal

        meta:
          type: object

        type:
          type: string
          enum:
            - deposit
            - payment

    ID:
      type:
        string

    Payments:
      type: array
      items:
        $ref: '#/components/schemas/Payment'
